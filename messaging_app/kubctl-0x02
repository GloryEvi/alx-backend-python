#!/bin/bash

echo "=== Blue-Green Deployment Script ==="

echo "=== Step 1: Deploy Blue version (current) ==="
kubectl apply -f blue_deployment.yaml

echo "=== Step 2: Deploy Services ==="
kubectl apply -f kubeservice.yaml

echo "=== Step 3: Wait for Blue deployment to be ready ==="
kubectl rollout status deployment/messaging-app-blue

echo "=== Step 4: Deploy Green version (new) ==="
kubectl apply -f green_deployment.yaml

echo "=== Step 5: Wait for Green deployment to be ready ==="
kubectl rollout status deployment/messaging-app-green

echo "=== Step 6: Check Blue deployment logs ==="
echo "Blue deployment logs:"
kubectl logs deployment/messaging-app-blue --tail=10

echo "=== Step 7: Check Green deployment logs ==="
echo "Green deployment logs:"
kubectl logs deployment/messaging-app-green --tail=10

echo "=== Step 8: Verify both deployments are running ==="
kubectl get deployments
kubectl get pods -l app=messaging-app

echo "=== Step 9: Test Blue service ==="
kubectl get service messaging-app-service-blue

echo "=== Step 10: Test Green service ==="
kubectl get service messaging-app-service-green

echo "=== Step 11: Show current active service (pointing to blue) ==="
kubectl get service messaging-app-service-active

echo ""
echo "=== Blue-Green Deployment Complete ==="
echo "To switch traffic to Green version, run:"
echo "kubectl patch service messaging-app-service-active -p '{\"spec\":{\"selector\":{\"version\":\"green\"}}}'"
echo ""
echo "To switch back to Blue version, run:"
echo "kubectl patch service messaging-app-service-active -p '{\"spec\":{\"selector\":{\"version\":\"blue\"}}}'"